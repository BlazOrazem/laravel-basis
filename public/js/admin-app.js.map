{"version":3,"sources":["app.js","vue.ajax.js","vue.init.js"],"names":[],"mappingsrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin-app.js","sourcesContent":["$(function() {\r\n    $('#side-menu').metisMenu();\r\n\r\n    var url = window.location;\r\n    $('.sidebar-nav a[href=\"'+ url +'\"]').addClass('active');\r\n\r\n    $(\"#jstree\").jstree({\r\n        \"types\" : {\r\n            \"default\" : {\r\n                \"icon\" : \"jt jt-page\"\r\n            },\r\n            \"folder\" : {\r\n                \"icon\" : \"jt jt-folder\"\r\n            },\r\n            \"new\" : {\r\n                \"icon\" : \"jt jt-new\"\r\n            }\r\n        },\r\n        \"plugins\" : [ \"types\" ]\r\n    });\r\n\r\n    // Loads the correct sidebar on window load,\r\n    // collapses the sidebar on window resize.\r\n    // Sets the min-height of #page-wrapper to window size.\r\n    $(window).bind(\"load resize\", function() {\r\n        topOffset = 50;\r\n        width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;\r\n        if (width < 768) {\r\n            $('div.navbar-collapse').addClass('collapse');\r\n            topOffset = 100; // 2-row-menu\r\n        } else {\r\n            $('div.navbar-collapse').removeClass('collapse');\r\n        }\r\n\r\n        height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;\r\n        height = height - topOffset;\r\n        if (height < 1) height = 1;\r\n        if (height > topOffset) {\r\n            $(\"#page-wrapper\").css(\"min-height\", (height) + \"px\");\r\n        }\r\n    });\r\n});\r\n\r\n\r\nVue.component('datatable', {\r\n    props: ['title', 'data', 'admin-id'],\r\n    template: '#managers-list',\r\n\r\n    ready: function() {\r\n        //$('table.data-table').DataTable({\r\n        //    dom: '<\"top\"if>rt<\"bottom\"lp><\"clear\">',\r\n        //    responsive: true,\r\n        //    order: [],\r\n        //    columnDefs: [{\r\n        //        targets  : 'no-sort',\r\n        //        orderable: false\r\n        //    }]\r\n        //});\r\n    },\r\n\r\n    methods: {\r\n        submit: function(e) {\r\n            var el = e.target;\r\n\r\n            var requestType = this.getRequestType(el);\r\n            \r\n            swal({\r\n                title: $(el).attr('title'),\r\n                text: $(el).attr('notification'),\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#DD6B55\",\r\n                confirmButtonText: \"Yes\",\r\n                cancelButtonText: \"Cancel\",\r\n                closeOnConfirm: false\r\n            }, function() {\r\n                this\r\n                    .$http[requestType]($(el).attr('action'))\r\n                    .then(this.onComplete.bind(this, el))\r\n                    .catch(this.onError);\r\n            }.bind(this));\r\n        },\r\n\r\n        onComplete: function (el) {\r\n            if ($(el).attr('completeTitle')) {\r\n                swal({\r\n                    title: $(el).attr('completeTitle'),\r\n                    type: \"success\",\r\n                    text: $(el).attr('completeText'),\r\n                    timer: 1000,\r\n                    showConfirmButton: false\r\n                });\r\n\r\n            }\r\n\r\n            var item = this.data[$(el).attr('data-id')];\r\n\r\n            this.data.$remove(item);\r\n            //console.log(item);\r\n\r\n            //delete this.data[item];\r\n            //this.data.splice(0,1);\r\n            //console.log(this.data);\r\n        },\r\n\r\n        onError: function (response) {\r\n            if (response) {\r\n                swal({\r\n                    title: \"Error\",\r\n                    type: \"error\",\r\n                    //text: \"error\",\r\n                    text: response.data.message,\r\n                    showConfirmButton: true\r\n                });\r\n            }\r\n        },\r\n\r\n        getRequestType: function (el) {\r\n            var method = el.querySelector('input[name=\"_method\"]');\r\n            \r\n            return (method ? method.value : el.method).toLowerCase();\r\n        }\r\n    }\r\n\r\n});","Vue.directive('ajax', {\r\n    params: ['title', 'notification', 'completeTitle', 'completeText'],\r\n\r\n    bind: function () {\r\n        this.el.addEventListener(\r\n            'submit', this.onSubmit.bind(this)\r\n        );\r\n    },\r\n\r\n    onSubmit: function (e) {\r\n        var requestType = this.getRequestType();\r\n\r\n        var el = this;\r\n\r\n        if (requestType == 'delete') {\r\n            swal({\r\n                title: el.params.title,\r\n                text: el.params.notification,\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#DD6B55\",\r\n                confirmButtonText: \"Yes\",\r\n                cancelButtonText: \"Cancel\",\r\n                closeOnConfirm: false\r\n            }, function() {\r\n                el.vm\r\n                    .$http[requestType](el.el.action)\r\n                    .then(el.onComplete.bind(el))\r\n                    .catch(el.onError.bind(el));\r\n            });\r\n        } else {\r\n            el.vm\r\n                .$http[requestType](el.el.action)\r\n                .then(el.onComplete.bind(el))\r\n                .catch(el.onError.bind(el));\r\n        }\r\n\r\n        e.preventDefault();\r\n    },\r\n\r\n    onComplete: function () {\r\n        if (this.params.completeTitle) {\r\n            swal({\r\n                title: this.params.completeTitle,\r\n                type: \"success\",\r\n                text: this.params.completeText,\r\n                timer: 1000,\r\n                showConfirmButton: false\r\n            });\r\n        }\r\n    },\r\n\r\n    onError: function (response) {\r\n        if (response) {\r\n            swal({\r\n                title: \"Error\",\r\n                type: \"error\",\r\n                text: response.data.message,\r\n                showConfirmButton: true\r\n            });\r\n        }\r\n    },\r\n\r\n    getRequestType: function () {\r\n        var method = this.el.querySelector('input[name=\"_method\"]');\r\n\r\n        return (method ? method.value : this.el.method).toLowerCase();\r\n    }\r\n});\r\n","Vue.http.headers.common['X-CSRF-TOKEN'] = $('meta[name=\"_token\"]').attr('content');\r\n\r\nnew Vue({\r\n    el: 'body',\r\n\r\n    data: {\r\n        managers: vars.managers\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}